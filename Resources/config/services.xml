<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="rollerworks_search.resolved_type_factory.class">Rollerworks\Component\Search\ResolvedFieldTypeFactory</parameter>
        <parameter key="rollerworks_search.registry.class">Rollerworks\Component\Search\FieldRegistry</parameter>
        <parameter key="rollerworks_search.factory.class">Rollerworks\Component\Search\SearchFactory</parameter>
        <parameter key="rollerworks_search.alias_resolver.chain.class">Rollerworks\Component\Search\FieldAliasResolver\ChainFieldAliasResolver</parameter>
        <parameter key="rollerworks_search.extension.class">Rollerworks\Component\Search\Extension\Symfony\DependencyInjection\DependencyInjectionExtension</parameter>
        <parameter key="rollerworks_search.fieldset_registry.class">Rollerworks\Component\Search\Extension\Symfony\DependencyInjection\FieldSetRegistry</parameter>
    </parameters>

    <services>
        <!-- ResolvedFormTypeFactory -->
        <service id="rollerworks_search.resolved_type_factory" class="%rollerworks_search.resolved_type_factory.class%" public="false" />

        <!-- FieldSetRegistry -->
        <service id="rollerworks_search.fieldset_registry" class="%rollerworks_search.fieldset_registry.class%">
            <argument id="service_container" type="service" />
            <!-- All services with tag "rollerworks_search.fieldset" are inserted here by FieldSetRegistryPass -->
            <argument type="collection" />
        </service>

        <!-- SearchConditionSerializer -->
        <service id="rollerworks_search.condition_serializer" class="Rollerworks\Component\Search\SearchConditionSerializer">
            <argument id="rollerworks_search.fieldset_registry" type="service" />
        </service>

        <!-- SearchRegistry -->
        <service id="rollerworks_search.field_registry" class="%rollerworks_search.registry.class%" public="false">
            <argument type="collection">
                <!--
                We don't need to be able to add more extensions.
                * more types can be registered with the rollerworks_search.type tag
                * more type extensions can be registered with the rollerworks_search.type_extension tag
                * other extensions can be registered with the rollerworks_search.extension tag
                -->
                <argument type="service" id="rollerworks_search.extension" />
            </argument>
            <argument type="service" id="rollerworks_search.resolved_type_factory" />
        </service>

        <!-- SearchFactory -->
        <service id="rollerworks_search.factory" class="%rollerworks_search.factory.class%">
            <argument type="service" id="rollerworks_search.field_registry" />
            <argument type="service" id="rollerworks_search.resolved_type_factory" />
            <argument type="service" id="rollerworks_search.metadata_factory" on-invalid="null" />
        </service>

        <!-- DependencyInjectionExtension -->
        <service id="rollerworks_search.extension" class="%rollerworks_search.extension.class%" public="false">
            <argument type="service" id="service_container" />
            <!-- All services with tag "rollerworks_search.type" are inserted here by ExtensionPass -->
            <argument type="collection" />
            <!-- All services with tag "rollerworks_search.type_extension" are inserted here by ExtensionPass -->
            <argument type="collection" />
        </service>

        <service id="rollerworks_search.field_alias_resolver.chain" class="%rollerworks_search.alias_resolver.chain.class%" public="false">
            <!-- All services with tag "rollerworks_search.field_alias_resolver" are inserted here by ChainFieldAliasResolverPass -->
            <argument type="collection" />
        </service>

        <service id="rollerworks_search.field_label_resolver.chain" class="Rollerworks\Component\Search\FieldLabelResolver\ChainFieldLabelResolver" public="false">
            <!-- All services with tag "rollerworks_search.field_label_resolver" are inserted here by ChainFieldLabelResolverPass -->
            <argument type="collection" />
        </service>
    </services>
</container>
